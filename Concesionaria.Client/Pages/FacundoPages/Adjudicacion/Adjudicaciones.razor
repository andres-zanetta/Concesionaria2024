@page "/api/Adjudicacion"
@using Concesionaria2024.Shared.DTO.FacundoDTO.Adjudicacion
@inject NavigationManager Navigation
@inject IHttpServicio HttpServicio

<div class="container d-flex justify-content-center align-items-start" style="min-height: 90vh; margin-top: 50px;">
    <div class="card border-0 shadow-lg" style="width: 100%; border-radius: 10px;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Adjudicaciones</h3>
        </div>

        <div class="card-body">
            <button @onclick="IrACrearNuevaAdjudicacion" class="btn btn-primary w-100 mb-4">
                Crear nueva Adjudicación
            </button>

            <div class="row mb-4">
                <div class="col-md-6 mb-3">
                    <input @bind="patenteBuscada" class="form-control" placeholder="Ingresa patente para buscar" />
                    <button class="btn btn-outline-primary w-100 mt-2" @onclick="BuscarPorPatente">Buscar por Patente</button>
                </div>
                <div class="col-md-6 mb-3">
                    <input @bind="codigoBuscado" class="form-control" placeholder="Ingresa código para buscar" />
                    <button class="btn btn-outline-primary w-100 mt-2" @onclick="BuscarPorCodigo">Buscar por Código</button>
                </div>
            </div>

            <div class="mb-4">
                <h5>Lista de Adjudicaciones</h5>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Patente</th>
                            <th>Fecha Adjudicación</th>
                            <th>Auto Entregado</th>
                            <th>Código Vehículo</th>
                            <th>Detalle</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (adjudicaciones != null && adjudicaciones.Any())
                        {
                            @foreach (var adjudicacion in adjudicaciones)
                            {
                                <tr>
                                    <td>@adjudicacion.Codigo</td>
                                    <td>@adjudicacion.PatenteVehiculo</td>
                                    <td>@adjudicacion.FechaAdjudicacion.ToShortDateString()</td>
                                    <td>@(adjudicacion.AutoEntregado ? "Sí" : "No")</td>
                                    <td>@adjudicacion.VehiculoCodigo</td>
                                    <td>@(string.IsNullOrEmpty(adjudicacion.Detalle) ? "No disponible" : adjudicacion.Detalle)</td>
                                    <td>
                                        <button class="btn btn-outline-secondary" @onclick="() => IrAEditarAdjudicacion(adjudicacion.Codigo)">Editar</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center">No se encontraron adjudicaciones.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (adjudicacionPorPatente != null)
            {
                <div class="alert alert-info">
                    <h5>Detalles de la Adjudicación por Patente</h5>
                    <p><strong>Código:</strong> @adjudicacionPorPatente.Codigo</p>
                    <p><strong>Patente:</strong> @adjudicacionPorPatente.PatenteVehiculo</p>
                    <p><strong>Fecha Adjudicación:</strong> @adjudicacionPorPatente.FechaAdjudicacion.ToShortDateString()</p>
                    <p><strong>Auto Entregado:</strong> @(adjudicacionPorPatente.AutoEntregado ? "Sí" : "No")</p>
                    <p><strong>Código Vehículo:</strong> @adjudicacionPorPatente.VehiculoCodigo</p>
                    <p><strong>Detalle:</strong> @(string.IsNullOrEmpty(adjudicacionPorPatente.Detalle) ? "No disponible" : adjudicacionPorPatente.Detalle)</p>
                </div>
            }

            @if (adjudicacionPorCodigo != null)
            {
                <div class="alert alert-info">
                    <h5>Detalles de la Adjudicación por Código</h5>
                    <p><strong>Código:</strong> @adjudicacionPorCodigo.Codigo</p>
                    <p><strong>Patente:</strong> @adjudicacionPorCodigo.PatenteVehiculo</p>
                    <p><strong>Fecha Adjudicación:</strong> @adjudicacionPorCodigo.FechaAdjudicacion.ToShortDateString()</p>
                    <p><strong>Auto Entregado:</strong> @(adjudicacionPorCodigo.AutoEntregado ? "Sí" : "No")</p>
                    <p><strong>Código Vehículo:</strong> @adjudicacionPorCodigo.VehiculoCodigo</p>
                    <p><strong>Detalle:</strong> @(string.IsNullOrEmpty(adjudicacionPorCodigo.Detalle) ? "No disponible" : adjudicacionPorCodigo.Detalle)</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<GET_AdjudicacionDTO> adjudicaciones;
    private GET_AdjudicacionDTO adjudicacionPorPatente;
    private GET_AdjudicacionDTO adjudicacionPorCodigo;
    private string? patenteBuscada;
    private string? codigoBuscado;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        var resultado = await HttpServicio.Get<List<GET_AdjudicacionDTO>>("api/adjudicacion");

        if (resultado.Error)
        {
            error = $"Error al obtener adjudicaciones: {await resultado.ObtenerError()}";
            adjudicaciones = new List<GET_AdjudicacionDTO>();
        }
        else
        {
            adjudicaciones = resultado.Respuesta ?? new List<GET_AdjudicacionDTO>();
        }
    }

    private async Task BuscarPorPatente()
    {
        if (string.IsNullOrEmpty(patenteBuscada))
        {
            error = "Debe ingresar una patente.";
            adjudicacionPorPatente = null;
            return;
        }

        var resultado = await HttpServicio.Get<GET_AdjudicacionDTO>($"api/adjudicacion/Patente/{patenteBuscada}");

        if (resultado.Error)
        {
            error = await resultado.ObtenerError();
            adjudicacionPorPatente = null;
        }
        else
        {
            adjudicacionPorPatente = resultado.Respuesta;
            error = null;
        }
    }

    private async Task BuscarPorCodigo()
    {
        if (string.IsNullOrEmpty(codigoBuscado))
        {
            error = "Debe ingresar un código.";
            adjudicacionPorCodigo = null;
            return;
        }

        var resultado = await HttpServicio.Get<GET_AdjudicacionDTO>($"api/adjudicacion/Codigo/{codigoBuscado}");

        if (resultado.Error)
        {
            error = await resultado.ObtenerError();
            adjudicacionPorCodigo = null;
        }
        else
        {
            adjudicacionPorCodigo = resultado.Respuesta;
            error = null;
        }
    }

    private void IrACrearNuevaAdjudicacion()
    {
        Navigation.NavigateTo("/api/adjudicacion/crear");
    }

    private void IrAEditarAdjudicacion(string codigo)
    {
        Navigation.NavigateTo($"/api/adjudicacion/CodigoAModificar/{codigo}");
    }
}
