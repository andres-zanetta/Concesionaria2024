@page "/api/Adjudicacion"
@using Concesionaria2024.Shared.DTO.FacundoDTO.Adjudicacion
@inject NavigationManager Navigation
@inject IHttpServicio HttpServicio

<div class="container d-flex justify-content-center align-items-start" style="min-height: 90vh; margin-top: 50px;">
    <div class="card border-0 shadow-lg" style="width: 100%; border-radius: 10px;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Adjudicaciones</h3>
        </div>

        <div class="card-body">
            <div class="mb-4">
                <input @bind="patenteBuscada" class="form-control" placeholder="Ingresa patente para buscar" />
                <button class="btn btn-primary mt-2" @onclick="BuscarPorPatente">Buscar por Patente</button>
            </div>

            @if (adjudicacionPorPatente != null)
            {
                <div class="alert alert-info">
                    <h5>Detalles de la Adjudicación</h5>
                    <p><strong>Patente:</strong> @adjudicacionPorPatente.PatenteVehiculo</p>
                    <p><strong>Código:</strong> @adjudicacionPorPatente.Codigo</p>
                    <p><strong>Fecha Adjudicación:</strong> @adjudicacionPorPatente.FechaAdjudicacion.ToShortDateString()</p>
                    <p><strong>Auto Entregado:</strong> @(adjudicacionPorPatente.AutoEntregado ? "Sí" : "No")</p>
                    <p><strong>Código Vehículo:</strong> @adjudicacionPorPatente.VehiculoCodigo</p>
                </div>
            }

            <div class="mb-4">
                <input @bind="codigoBuscado" class="form-control" placeholder="Ingresa código para buscar" />
                <button class="btn btn-primary mt-2" @onclick="BuscarPorCodigo">Buscar por Código</button>
            </div>

            @if (adjudicacionPorCodigo != null)
            {
                <div class="alert alert-info">
                    <h5>Detalles de la Adjudicación</h5>
                    <p><strong>Código:</strong> @adjudicacionPorCodigo.Codigo</p>
                    <p><strong>Patente:</strong> @adjudicacionPorCodigo.PatenteVehiculo</p>
                    <p><strong>Fecha Adjudicación:</strong> @adjudicacionPorCodigo.FechaAdjudicacion.ToShortDateString()</p>
                    <p><strong>Auto Entregado:</strong> @(adjudicacionPorCodigo.AutoEntregado ? "Sí" : "No")</p>
                    <p><strong>Código Vehículo:</strong> @adjudicacionPorCodigo.VehiculoCodigo</p>
                </div>
            }

            <button class="btn btn-outline-primary mt-4" data-bs-toggle="collapse" data-bs-target="#adjudicacionesList" aria-expanded="false" aria-controls="adjudicacionesList">
                Ver todas las Adjudicaciones
            </button>


            <button @onclick="IrACrearNuevaAdjudicacion" class="btn btn-primary w-100 mt-3">Crear nueva Adjudicacion</button>

            <div class="collapse mt-3" id="adjudicacionesList">
                @if (adjudicaciones == null)
                {
                    <div class="alert alert-info" role="alert">
                        Cargando...
                    </div>
                }
                else if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger" role="alert">
                        <strong>Error:</strong> @error
                    </div>
                }
                else if (!adjudicaciones.Any())
                {
                    <div class="alert alert-warning" role="alert">
                        No se encontraron adjudicaciones.
                    </div>
                }
                else
                {
                    <ul class="list-group">
                        @foreach (var adjudicacion in adjudicaciones)
                        {
                            <li class="list-group-item">
                                <strong>Patente:</strong> @adjudicacion.PatenteVehiculo <br />
                                <strong>Código:</strong> @adjudicacion.Codigo <br />
                                <strong>Fecha Adjudicación:</strong> @adjudicacion.FechaAdjudicacion.ToShortDateString() <br />
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<GET_AdjudicacionDTO> adjudicaciones;
    private GET_AdjudicacionDTO adjudicacionPorPatente;
    private GET_AdjudicacionDTO adjudicacionPorCodigo;
    private string? patenteBuscada;
    private string? codigoBuscado;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        var resultado = await HttpServicio.Get<List<GET_AdjudicacionDTO>>("api/adjudicacion");

        if (resultado.Error)
        {
            error = $"Error al obtener adjudicaciones: {await resultado.ObtenerError()}";
            adjudicaciones = new List<GET_AdjudicacionDTO>();
        }
        else
        {
            adjudicaciones = resultado.Respuesta ?? new List<GET_AdjudicacionDTO>();
        }
    }

    private async Task BuscarPorPatente()
    {
        if (string.IsNullOrEmpty(patenteBuscada))
        {
            error = "Debe ingresar una patente.";
            adjudicacionPorPatente = null;
            return;
        }

        var resultado = await HttpServicio.Get<GET_AdjudicacionDTO>($"api/adjudicacion/patente/{patenteBuscada}");

        if (resultado.Error)
        {
            error = await resultado.ObtenerError();
            adjudicacionPorPatente = null;
        }
        else
        {
            adjudicacionPorPatente = resultado.Respuesta;
            error = null;
        }
    }

    private async Task BuscarPorCodigo()
    {
        if (string.IsNullOrEmpty(codigoBuscado))
        {
            error = "Debe ingresar un código.";
            adjudicacionPorCodigo = null;
            return;
        }

        var resultado = await HttpServicio.Get<GET_AdjudicacionDTO>($"api/adjudicacion/codigo/{codigoBuscado}");

        if (resultado.Error)
        {
            error = await resultado.ObtenerError();
            adjudicacionPorCodigo = null;
        }
        else
        {
            adjudicacionPorCodigo = resultado.Respuesta;
            error = null;
        }
    }


    private void IrACrearNuevaAdjudicacion()
    {
        Navigation.NavigateTo("/api/adjudicacion/crear");
    }
}
