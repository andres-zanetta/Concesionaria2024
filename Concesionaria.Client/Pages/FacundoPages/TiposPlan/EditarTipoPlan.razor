@page "/api/TipoPlan/editar/{codigo}"
@using Concesionaria2024.Shared.DTO.FacundoDTO.TipoPlan
@inject IHttpServicio http
@inject NavigationManager Navigation

<div class="container d-flex justify-content-center align-items-start" style="min-height: 90vh; margin-top: 50px;">
    <div class="card border-0 shadow-lg" style="width: 100%; border-radius: 10px;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Editar Tipo de Plan</h3>
        </div>

        <div class="card-body p-4 bg-light">
            <h5 class="mb-4">Editar los detalles del plan</h5>

            @if (planParaEditar == null)
            {
                <p>Cargando plan...</p>
            }
            else
            {
                <EditForm Model="planParaEditar" OnValidSubmit="GuardarCambios">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="nombrePlan">Nombre del Plan</label>
                        <InputText id="nombrePlan" class="form-control" @bind-Value="planParaEditar.NombrePlan" />
                        <ValidationMessage For="@(() => planParaEditar.NombrePlan)" />
                    </div>

                    <div class="form-group">
                        <label for="valorTotal">Valor Total</label>
                        <InputNumber id="valorTotal" class="form-control" @bind-Value="planParaEditar.ValorTotal" />
                        <ValidationMessage For="@(() => planParaEditar.ValorTotal)" />
                    </div>

                    <div class="form-group">
                        <label for="descripcion">Descripción</label>
                        <InputTextArea id="descripcion" class="form-control" @bind-Value="planParaEditar.Descripcion" />
                        <ValidationMessage For="@(() => planParaEditar.Descripcion)" />
                    </div>

                    <div class="form-group">
                        <label for="cantCuotas">Cantidad de Cuotas</label>
                        <InputNumber id="cantCuotas" class="form-control" @bind-Value="planParaEditar.CantCuotas" />
                        <ValidationMessage For="@(() => planParaEditar.CantCuotas)" />
                    </div>

                    <div class="form-group">
                        <label for="codigoVehiculo">Código de Vehículo</label>
                        <InputText id="codigoVehiculo" class="form-control" @bind-Value="planParaEditar.CodigoVehiculo" />
                        <ValidationMessage For="@(() => planParaEditar.CodigoVehiculo)" />
                    </div>

                    <button type="submit" class="btn btn-primary w-100 mt-3">Guardar Cambios</button>
                    <button @onclick="IrALaLista" class="btn btn-outline-primary w-100 mt-3">Volver a la lista</button>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public string codigo { get; set; }

    private PUT_TipoPlanDTO planParaEditar;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await CargarPlan();
    }

    private async Task CargarPlan()
    {
        var resp = await http.Get<GET_TipoPlanDTO>($"api/TipoPlan/Codigo/{codigo}");
        if (!resp.Error)
        {
            planParaEditar = new PUT_TipoPlanDTO
                {
                    NombrePlan = resp.Respuesta.NombrePlan,
                    CantCuotas = resp.Respuesta.CantCuotas,
                    ValorTotal = resp.Respuesta.ValorTotal,
                    CodigoVehiculo = resp.Respuesta.CodigoVehiculo,
                    Descripcion = resp.Respuesta.Descripcion,
                };
        }
        else
        {
            Navigation.NavigateTo("/error");
        }
    }

    private async Task GuardarCambios()
    {
        var resp = await http.Put($"api/TipoPlan/CodigoAModificar/{codigo}", planParaEditar);
        if (!resp.Error)
        {
            Navigation.NavigateTo("/api/TipoPlan/mostrar", true);
        }
        else
        {
            var error = await resp.ObtenerError();
        }
    }

    private void IrALaLista()
    {
        Navigation.NavigateTo("/api/TipoPlan/mostrar");
    }
}
