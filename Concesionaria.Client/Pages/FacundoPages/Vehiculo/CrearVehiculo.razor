@page "/api/vehiculos/crear"
@using Concesionaria2024.Shared.DTO.FacundoDTO.Vehiculo
@inject IHttpServicio http
@inject NavigationManager Navigation

<div class="container d-flex justify-content-center align-items-start" style="min-height: 90vh; margin-top: 50px;">
    <div class="card border-0 shadow-lg" style="width: 500px; border-radius: 10px;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Agregar Vehículo</h3>
        </div>
        <div class="card-body">
            <EditForm Model="@vehiculo" OnValidSubmit="EnviarVehiculo" Context="editContext">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="Marca">Marca</label>
                    <InputText id="Marca" class="form-control" @bind-Value="vehiculo.Marca" />
                    <ValidationMessage For="@(() => vehiculo.Marca)" />
                </div>

                <div class="form-group">
                    <label for="Modelo">Modelo</label>
                    <InputText id="Modelo" class="form-control" @bind-Value="vehiculo.Modelo" />
                    <ValidationMessage For="@(() => vehiculo.Modelo)" />
                </div>

                <div class="form-group">
                    <label for="Precio">Precio</label>
                    <InputNumber id="Precio" class="form-control" @bind-Value="vehiculo.Precio" />
                    <ValidationMessage For="@(() => vehiculo.Precio)" />
                </div>

                <div class="form-group">
                    <label for="Motor">Motor</label>
                    <InputText id="Motor" class="form-control" @bind-Value="vehiculo.Motor" />
                    <ValidationMessage For="@(() => vehiculo.Motor)" />
                </div>

                <div class="form-group">
                    <label for="Combustible">Combustible</label>
                    <InputText id="Combustible" class="form-control" @bind-Value="vehiculo.Combustible" />
                    <ValidationMessage For="@(() => vehiculo.Combustible)" />
                </div>

                @if (isSubmitting)
                {
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                }

                <button type="submit" class="btn btn-primary w-100 mt-3" @disabled="isSubmitting">Agregar vehículo</button>
            </EditForm>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">
                    @errorMessage
                </div>
            }

            <button @onclick="IrALaLista" class="btn btn-outline-primary w-100 mt-3">Volver a la lista</button>
        </div>
    </div>
</div>

@code {
    private POST_VehiculoDTO vehiculo = new POST_VehiculoDTO();
    private bool isSubmitting = false;
    private string errorMessage;
    private string successMessage;

    private async Task EnviarVehiculo()
    {
        isSubmitting = true;
        errorMessage = null;
        successMessage = null;

        var response = await http.Post<POST_VehiculoDTO>("api/Vehiculos", vehiculo);

        if (!response.Error)
        {
            successMessage = "Vehículo agregado correctamente.";

            await Task.Delay(2000);
            Navigation.NavigateTo("/Vehiculos");
        }
        else
        {
            errorMessage = $"Error: {await response.ObtenerError()}";
            Console.WriteLine(errorMessage);
        }

        isSubmitting = false;
    }

    private void IrALaLista()
    {
        Navigation.NavigateTo("/api/vehiculos/lista");
    }
}
