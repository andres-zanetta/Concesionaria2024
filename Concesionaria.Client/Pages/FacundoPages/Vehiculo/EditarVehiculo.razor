@page "/api/Vehiculos/Editar"
@using Concesionaria2024.Shared.DTO.FacundoDTO.Vehiculo
@inject IHttpServicio http
@inject NavigationManager Navigation

<div class="container d-flex justify-content-center align-items-start" style="min-height: 90vh; margin-top: 50px;">
    <div class="card border-0 shadow-lg" style="width: 500px; border-radius: 10px;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Actualizar Vehículo</h3>
        </div>

        <div class="card-body">
            @if (!string.IsNullOrEmpty(mensajeError))
            {
                <div class="alert alert-danger">@mensajeError</div>
            }

            <EditForm Model="@vehiculo" OnValidSubmit="ActualizarVehiculo">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="Marca">Marca</label>
                    <InputText id="Marca" class="form-control" @bind-Value="vehiculo.Marca" />
                    <ValidationMessage For="@(() => vehiculo.Marca)" />
                </div>

                <div class="form-group">
                    <label for="Modelo">Modelo</label>
                    <InputText id="Modelo" class="form-control" @bind-Value="vehiculo.Modelo" />
                    <ValidationMessage For="@(() => vehiculo.Modelo)" />
                </div>

                <div class="form-group">
                    <label for="Precio">Precio</label>
                    <InputNumber id="Precio" class="form-control" @bind-Value="vehiculo.Precio" step="0.01" />
                    <ValidationMessage For="@(() => vehiculo.Precio)" />
                </div>

                <div class="form-group">
                    <label for="Motor">Motor</label>
                    <InputText id="Motor" class="form-control" @bind-Value="vehiculo.Motor" />
                    <ValidationMessage For="@(() => vehiculo.Motor)" />
                </div>

                <div class="form-group">
                    <label for="Combustible">Combustible</label>
                    <InputText id="Combustible" class="form-control" @bind-Value="vehiculo.Combustible" />
                    <ValidationMessage For="@(() => vehiculo.Combustible)" />
                </div>

                <button type="submit" class="btn btn-primary w-100">Actualizar Vehículo</button>
            </EditForm>

            <button @onclick="IrALaLista" class="btn btn-outline-primary w-100 mt-3">Volver a la Lista</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Codigo { get; set; } = null!;
    private PUT_VehiculoDTO vehiculo = new PUT_VehiculoDTO();
    private string mensajeError = "";

    protected override async Task OnInitializedAsync()
    {
        await CargarVehiculo();
    }

    private async Task CargarVehiculo()
    {
        var respuesta = await http.Get<PUT_VehiculoDTO>($"api/Vehiculos/Codigo/{Codigo}");

        if (!respuesta.Error)
        {
            vehiculo = respuesta.Respuesta;
        }
        else
        {
            mensajeError = "No se encontró el vehículo con el código proporcionado.";
        }
    }

    private async Task ActualizarVehiculo()
    {
        var respuesta = await http.Put<PUT_VehiculoDTO>($"api/Vehiculos/CodigoAModificar/{Codigo}", vehiculo);

        if (!respuesta.Error)
        {
            Navigation.NavigateTo("/vehiculos/get"); 
        }
        else
        {
            mensajeError = await respuesta.ObtenerError();
        }
    }

    private void IrALaLista()
    {
        Navigation.NavigateTo("/api/Vehiculos/Mostrar");
    }
}
