@page "/api/Clientes/Crear"
@using Concesionaria2024.Shared.DTO.AndresDTO
@inject IHttpServicio httpServicio
@inject NavigationManager navigationManager

<PageTitle>Convertir Persona a Cliente</PageTitle>

<div class="container mt-5 d-flex justify-content-center">
    <div class="card border-0 shadow-lg" style="max-width: 800px; width: 100%;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Nuevo Cliente</h3>
        </div>
        <div class="card-body p-4 bg-light">
            <EditForm Model="clienteDto" OnValidSubmit="ConvertirAPersonaEnCliente">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <!-- Agregar margen en la etiqueta y el campo de texto -->
                <div class="form-group mb-2">
                    <label for="NumDoc" class="mb-2">Número de Documento (DNI)</label>
                    <InputText id="NumDoc" class="form-control" @bind-Value="clienteDto.NumDoc" />
                    <ValidationMessage For="@(() => clienteDto.NumDoc)" />
                </div>

                <!-- Contenedor para el botón centrado -->
                <div class="d-flex justify-content-center mt-3">
                    <button class="btn btn-primary btn-md" type="submit" style="width: auto; padding-left: 30px; padding-right: 30px;">
                        Aceptar
                    </button>
                </div>
            </EditForm>

            @if (mensaje != null)
            {
                <div class="alert alert-info mt-3">
                    @mensaje
                </div>
            }
        </div>
    </div>
</div>

@code {
    private POST_ClienteConNumDocDTO clienteDto = new POST_ClienteConNumDocDTO();
    private string mensaje;

    private async Task ConvertirAPersonaEnCliente()
    {
        try
        {
            // Enviamos la solicitud POST
            var respuesta = await httpServicio.Post("api/Cliente", clienteDto);

            // Verificamos si hubo algún error
            if (respuesta.Error)
            {
                // Si hay un error, mostramos el mensaje de error
                mensaje = await respuesta.ObtenerError();
            }
            else
            {
                // Aquí asumimos que la respuesta es un string con el cuerpo del mensaje
                // Verificamos si la respuesta contiene el cuerpo esperado
                if (respuesta.Respuesta is string respuestaBody)
                {
                    // Si la respuesta es de tipo string, lo mostramos directamente
                    mensaje = respuestaBody;
                }
                else
                {
                    // Si la respuesta no es un string, usamos un mensaje genérico
                    mensaje = "Error desconocido en la respuesta del servidor.";
                }
            }
        }
        catch (Exception ex)
        {
            // Capturamos excepciones si algo salió mal (por ejemplo, problemas de conexión o deserialización)
            mensaje = $"Error: {ex.Message}";
        }
    }
}








