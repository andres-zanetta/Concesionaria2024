@page "/api/Vendedores/Crear"
@using Concesionaria2024.Shared.DTO.AndresDTO
@inject IHttpServicio httpServicio
@inject NavigationManager navigationManager

<PageTitle>Convertir Persona a Vendedor</PageTitle>

<div class="container mt-5 d-flex justify-content-center">
    <div class="card border-0 shadow-lg" style="max-width: 800px; width: 100%;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Convertir Persona a Vendedor</h3>
        </div>
        <div class="card-body p-4 bg-light">
            <EditForm Model="vendedorDto" OnValidSubmit="ConvertirAPersonaEnVendedor">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <!-- Campo para Número de Documento -->
                <div class="form-group mb-2">
                    <label for="NumDoc" class="mb-2">Número de Documento (DNI)</label>
                    <InputText id="NumDoc" class="form-control" @bind-Value="vendedorDto.NumDoc" />
                    <ValidationMessage For="@(() => vendedorDto.NumDoc)" />
                </div>

                <!-- Contenedor para el botón centrado -->
                <div class="d-flex justify-content-center mt-3">
                    <button class="btn btn-primary btn-md" type="submit" style="width: auto; padding-left: 30px; padding-right: 30px;">
                        Aceptar
                    </button>
                </div>
            </EditForm>

            <!-- Mensajes de éxito y error -->
            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-info mt-3">@mensaje</div>
            }

            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3">@error</div>
            }
        </div>
    </div>
</div>

@code {
    private POST_VendedorDTO vendedorDto = new POST_VendedorDTO();
    private string mensaje = string.Empty;
    private string error = string.Empty;

    private async Task ConvertirAPersonaEnVendedor()
    {
        mensaje = string.Empty;
        error = string.Empty;

        try
        {
            var respuesta = await httpServicio.Post("api/Vendedores", vendedorDto);

            if (!respuesta.Error)
            {
                mensaje = "La persona ha sido convertida a vendedor correctamente.";
            }
            else
            {
                var contenidoError = await respuesta.httpResponseMessage.Content.ReadAsStringAsync();
                error = $"Error: {contenidoError}";
            }
        }
        catch (Exception ex)
        {
            error = $"Se produjo un error: {ex.Message}";
        }
    }
}




