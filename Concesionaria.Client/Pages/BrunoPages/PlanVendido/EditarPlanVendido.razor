@page "/api/PlanVendido/editar/{codigo}"
@using Concesionaria2024.Shared.DTO.GinoDTO.PlanVendido
@inject IHttpServicio http
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

<div class="container d-flex justify-content-center align-items-start" style="min-height: 90vh; margin-top: 50px;">
    <div class="card border-0 shadow-lg" style="width: 100%; border-radius: 10px;">
        <div class="card-header bg-primary text-white text-center py-4" style="border-top-left-radius: 10px; border-top-right-radius: 10px;">
            <h3 class="mb-0" style="font-weight: 600;">Editar Plan Vendido</h3>
        </div>

        <div class="card-body p-4 bg-light">
            <EditForm Model="@planVendido" OnValidSubmit="GuardarPlanVendido">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group mb-3">
                    <label for="estado">Estado</label>
                    <InputText id="estado" class="form-control" @bind-Value="planVendido.Estado" />
                </div>

                <div class="form-group mb-3">
                    <label for="descripcion">Descripción</label>
                    <InputText id="descripcion" class="form-control" @bind-Value="planVendido.Descripcion" />
                </div>

                <div class="form-group mb-3">
                    <label for="fechaInicio">Fecha de Inicio</label>
                    <InputDate id="fechaInicio" class="form-control" @bind-Value="planVendido.FechaInicio" />
                </div>

                <div class="form-group mb-3">
                    <label for="fechaFin">Fecha de Fin</label>
                    <InputDate id="fechaFin" class="form-control" @bind-Value="planVendido.FechaFin" />
                </div>

                <div class="form-group mb-3">
                    <label for="planEnMora">Plan en Mora</label>
                    <InputCheckbox id="planEnMora" style="width: 20px; height: 20px; padding: 0; display: inline-block;" @bind-Value="planVendido.PlanEnMora" />
                </div>

                <div class="form-group mb-3">
                    <label for="vendedorDNI">Vendedor</label>
                    <InputText id="vendedorDNI" class="form-control" @bind-Value="planVendido.VendedorDNI" />
                </div>

                <div class="form-group mb-3">
                    <label for="clienteDNI">Cliente</label>
                    <InputText id="clienteDNI" class="form-control" @bind-Value="planVendido.ClienteDNI" />
                </div>

                <div class="form-group mb-3">
                    <label for="tipoPlanCodigo">Tipo de Plan</label>
                    <InputText id="tipoPlanCodigo" class="form-control" @bind-Value="planVendido.TipoPlanCodigo" />
                </div>

                <div class="d-flex justify-content-between">
                    <button class="btn btn-success me-3" type="submit">Guardar</button>
                    <button class="btn btn-secondary ms-3" @onclick="CancelarEdicion">Cancelar</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Codigo { get; set; }
    private PUT_PlanVendidoDNI_DTO planVendido = new PUT_PlanVendidoDNI_DTO();
    private string mensajeError = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await CargarPlanVendido();
    }

    private async Task CargarPlanVendido()
    {
        var resp = await http.Get<GET_PlanVendidoDTO>($"api/PlanVendido/Codigo/{Codigo}");
        if (!resp.Error)
        {
            // Convertir la respuesta GET_PlanVendidoDTO a PUT_PlanVendidoDNI_DTO
            planVendido = new PUT_PlanVendidoDNI_DTO
                {
                    FechaSuscripcion = resp.Respuesta.FechaSuscripcion,
                    FechaSorteo = resp.Respuesta.FechaSorteo,
                    Descripcion = resp.Respuesta.Descripcion,
                    Estado = resp.Respuesta.Estado,
                    FechaInicio = resp.Respuesta.FechaInicio,
                    FechaFin = resp.Respuesta.FechaFin,
                    PlanEnMora = resp.Respuesta.PlanEnMora,
                    VendedorDNI = resp.Respuesta.NombreVendedor, // Si 'NombreVendedor' es la propiedad adecuada
                    ClienteDNI = resp.Respuesta.NombreCliente,   // Si 'NombreCliente' es la propiedad adecuada
                    TipoPlanCodigo = resp.Respuesta.NombrePlan   // Si 'NombrePlan' es la propiedad adecuada
                };

        }
        else
        {
            mensajeError = "No se pudo cargar el plan vendido.";
        }
    }

    private async Task GuardarPlanVendido()
    {
        Console.WriteLine("El método GuardarPlanVendido fue llamado.");

        var resp = await http.Put($"api/PlanVendido/CodigoAModificar/{Codigo}", planVendido);
        if (resp.Error)
        {
            mensajeError = await resp.ObtenerError();
            Console.WriteLine($"Error al guardar: {mensajeError}");
        }
        else
        {
            // Redirigir a la lista de planes vendidos si la operación fue exitosa
            navigationManager.NavigateTo("/api/PlanVendido/mostrar");
        }
    }



    private void CancelarEdicion()
    {
        navigationManager.NavigateTo("/api/PlanVendido/mostrar");
    }
}
