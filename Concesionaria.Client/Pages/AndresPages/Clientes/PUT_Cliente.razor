@page "/api/Cliente/put/{cliente:int}"
@using Concesionaria2024.Shared.DTO.AndresDTO
@inject IHttpServicio http
@inject NavigationManager navigationManager
<h3>Editar Lista de Clientes</h3>

<h1>@sel</h1>

<EditForm Model="cliente" OnInvalidSubmit="Grabar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>FechaInicio</label>
        <div>
            <InputDate class="form-control" @bind-Value="@cliente.FechaInicio" />
            <ValidationMessage For="@(() => cliente.FechaInicio)" />
        </div>
        <label>FechaFin</label>
        <div>
            <InputDate class="form-control" @bind-Value="@cliente.FechaFin" />
            <ValidationMessage For="@(() => cliente.FechaFin)" />
        </div>
    </div>
    <div class="form-group">

    </div>
</EditForm> 


@code {
    [Parameter] public int Id {get; set;}
    private Cliente cliente = new Cliente();

    string sel = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }
    private async Task Mostrar()
    {
        var respuesta = await http.Get<Cliente>($"api/Clientes/{Id}");

        if (!respuesta.Error)
        {
            cliente = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Cliente");
        }
    }

    private async Task Grabar()
    {
    

        var httpRespuesta = await http.Put<PUT_ClienteDTO>($"api/Cliente/{Id}");
        if (httpRespuesta.Error)
        {
            //var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Clientes");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Clientes");
    }


}
 